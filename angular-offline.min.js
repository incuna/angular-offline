/*! Angular offline v0.1.0 | (c) 2016 Greg Berg√© | License MIT */
angular.module("offline",[]).service("connectionStatus",["$window","$rootScope",function(a,b){this.isOnline=function(){return a.navigator.onLine},this.$on=function(c,d){a.addEventListener(c,function(){b.$apply(d)})}}]).provider("offline",function(){var a,b=this;b.debug=function(a){return this._debug=a,this},b.alwaysRefresh=function(a){return this._alwaysRefresh=a,this},this.$get=["$q","$rootScope","$window","$log","connectionStatus","$cacheFactory",function(c,d,e,f,g,h){function i(){return b._debug?f.debug.apply(f,["%cOffline","font-weight: bold"].concat([].slice.call(arguments))):void 0}function j(c,d){c===!0&&(c=a.defaults.cache||h.get("$http"));var e=c.info(d);(b._alwaysRefresh||e&&e.isExpired)&&c.remove(d)}function k(){return r.stackCache||s}function l(){var a=k();return a.get("stack")||[]}function m(a){var b=k();b.put("stack",a)}function n(a){var b=l();b.push(a),m(b)}function o(){var a=l(),b=a.shift();return m(a),b}function p(a){n({url:a.url,data:a.data,headers:a.headers,method:a.method,offline:a.offline,timeout:angular.isNumber(a.timeout)?a.timeout:void 0})}function q(){var b=o();return b?(i("will process request",b),a(b).then(function(a){return i("request success",a),d.$broadcast("offline-request:success",a,b),a},function(a){return i("request error",a),d.$broadcast("offline-request:error",a,b),c.reject(a)})):c.reject(new Error(r.ERRORS.EMPTY_STACK))}var r={ERRORS:{EMPTY_STACK:"empty stack",REQUEST_QUEUED:"request queued"}},s=h("offline-request-stack");return r.processStack=function(){return g.isOnline()?q().then(r.processStack)["catch"](function(a){return a&&a.message===r.ERRORS.EMPTY_STACK?void i("all requests completed"):a&&a.message===r.ERRORS.REQUEST_QUEUED?void i("request has been queued, stop"):r.processStack()}):void 0},r.start=function(b){a=b,g.$on("online",r.processStack),r.processStack()},r.interceptors={request:function(a){return a.offline?(i("intercept request",a),a.cache||(a.cache=!0),"GET"===a.method?(g.isOnline()&&j(a.cache,a.url),a):g.isOnline()?a:(p(a),c.reject(new Error(r.ERRORS.REQUEST_QUEUED)))):a}},r}]}).config(["$provide","$httpProvider",function(a,b){a.factory("offlineInterceptor",["offline",function(a){return a.interceptors}]),b.interceptors.push("offlineInterceptor")}]);
//# sourceMappingURL=angular-offline.min.js.map